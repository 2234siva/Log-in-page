{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIVA\\\\React-loginPage\\\\siva\\\\src\\\\components\\\\UserRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRoute = _ref => {\n  _s();\n\n  let {\n    children,\n    ...rest\n  } = _ref;\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  return currentUser ? /*#__PURE__*/_jsxDEV(Route, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingToRedirect, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 46\n  }, this);\n};\n\n_s(UserRoute, \"Ufl+rr8RMfBJwOGREuKsgPnUa48=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\nexport default UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["C:/Users/SIVA/React-loginPage/siva/src/components/UserRoute.js"],"names":["React","Route","useSelector","LoadingToRedirect","UserRoute","children","rest","currentUser","state","user"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,SAAS,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA0B;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAnC;AACA,SAAOF,WAAW,gBAAG,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAyB,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAA3C;AACD,CAHD;;GAAMF,S;UACoBF,W;;;KADpBE,S;AAKN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingToRedirect from \"./LoadingToRedirect\";\r\n\r\nconst UserRoute = ({ children, ...rest }) => {\r\n  const { currentUser } = useSelector((state) => state.user);\r\n  return currentUser ? <Route {...rest} /> : <LoadingToRedirect />;\r\n};\r\n\r\nexport default UserRoute;\r\n"]},"metadata":{},"sourceType":"module"}